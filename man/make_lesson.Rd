% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_lesson.R
\name{make_lesson}
\alias{make_lesson}
\alias{make_lessons_from_book}
\title{Make a Lesson}
\usage{
make_lesson(lesson_name, course_dir = ".", verbose = TRUE,
  md_file = NULL, make_slide_deck = FALSE, slide_id = NULL,
  rmd = FALSE, ...)

make_lessons_from_book(course_dir = ".", verbose = TRUE, ...)
}
\arguments{
\item{lesson_name}{Name of the Lesson to create.  This should be
human-readable and will be the title of your lesson in your course.}

\item{course_dir}{directory with course materials}

\item{verbose}{print diagnostic messages}

\item{md_file}{Output markdown file to create.  If not specified,
will take the \code{lesson_name}, sub out spaces, lower case it,
and use that for the file name.}

\item{make_slide_deck}{Create a slide deck on Google Slides if
no link is provided.}

\item{slide_id}{ID to slide deck on Google Slides.}

\item{rmd}{Should an Rmd (Rmarkdown) be made versus a Markdown?}

\item{...}{arguments passed to \code{\link{check_didactr_auth}}}
}
\value{
A list of the created markdown manuscript file and script files.
\code{make_lessons_from_book} will return a list of these lists,
one for each lesson in the \code{Book.txt} file.
}
\description{
Make a Lesson
}
\examples{
root_path = tempfile()
course_name = "test"
sc = start_course(course_name, root_path)
verbose = TRUE
out =make_lesson(lesson_name = "how to Do Things", course_dir = sc$course_dir)
dir(sc$man_path)
dir(sc$scr_path)
readLines(sc$book_txt, warn = FALSE)
readLines(out$md_file)
in_ci <- function() {
nzchar(Sys.getenv("CI"))
}
\dontrun{
# requires authorization
root_path = tempfile()
course_name = "test"
sc = start_course(course_name, root_path)
verbose = TRUE
out = make_lesson(lesson_name = "how to Do Things",
course_dir = sc$course_dir,
make_slide_deck = !in_ci())
dir(sc$man_path)
dir(sc$scr_path)
readLines(sc$book_txt, warn = FALSE)
readLines(out$md_file, warn = FALSE)
}

root_path = tempfile()
course_name = "test"
sc = start_course(course_name, root_path)
verbose = TRUE
x =  system.file("extdata", "Book.txt", package = "didactr")
file.copy(x, sc$book_txt, overwrite = TRUE)
course_dir = sc$course_dir
res = make_lessons_from_book(course_dir = sc$course_dir)
dir(sc$man_path)
dir(sc$scr_path)
readLines(sc$book_txt)
readLines(res[[3]]$md_file)
}
