% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/start_course.R
\name{start_course}
\alias{start_course}
\alias{create_course}
\title{Starting a Course, Light wrapper for \code{\link{make_course}}}
\usage{
start_course(course_name, root_path = ".", book_txt = NULL,
  verbose = TRUE, rstudio = FALSE, open = FALSE, ...)

create_course(course_name, root_path = ".", book_txt = NULL,
  verbose = TRUE, rstudio = FALSE, open = FALSE, ...)
}
\arguments{
\item{course_name}{Name of the course.  Any spaces will be set to
underscores}

\item{root_path}{The directory to put the course into.}

\item{book_txt}{A text file with names of markdown
files and course names}

\item{verbose}{print diagnostic messages}

\item{rstudio}{If \code{TRUE}, calls \code{use_rstudio()} to
make the new package or project into an RStudio Project.}

\item{open}{If \code{TRUE}, activates the new project:
If RStudio desktop, the package is opened in a new session.
Otherwise, the working directory and active project is changed.}

\item{...}{additional argument to pass to \code{\link{make_lesson}}}
}
\value{
The output of \code{\link{make_course}}.
}
\description{
Starting a Course, Light wrapper for \code{\link{make_course}}
}
\examples{
root_path = tempfile()
course_name = "test this out"
sc = start_course(course_name, root_path)


root_path = tempfile()
course_name = "test this out2"
book_txt =  system.file("extdata", "Book.txt", package = "didactr")
sc = start_course(course_name, root_path, book_txt = book_txt)
readLines(sc$book_txt)
md_files = list.files(sc$man_path, full.names = TRUE)
md_files
readLines(md_files[1])
}
